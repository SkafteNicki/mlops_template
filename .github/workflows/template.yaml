name: Check Template

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  setup:
    name: Template generation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project_structure: ["simple", "advance"]
        project_manager: ["pip", "uv"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install invoke
          invoke requirements
          pip list

      - name: Execute template
        run: |
          invoke template \
            --project-structure=${{ matrix.project_structure }} --project-manager=${{ matrix.project_manager }}

      - name: Upload generated template
        uses: actions/upload-artifact@v4
        with:
          name: generated-template-${{ matrix.project_structure }}-${{ matrix.project_manager }}
          path: ${{ matrix.project_structure }}_${{ matrix.project_manager }}_repo

  pip-project:
    name: Project using pip
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project_structure: ["simple", "advance"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Download generated template
        uses: actions/download-artifact@v4
        with:
          name: generated-template-${{ matrix.project_structure }}-${{ matrix.project_manager }}
          path: ${{ matrix.project_structure }}_${{ matrix.project_manager }}_repo

      - name: Install conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: true
          activate-environment: ""

      - name: List all project commands
        run: |
          cd ${{ matrix.project_structure }}_repo
          invoke --list


  uv-project:
    name: Project using uv
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project_structure: ["simple", "advance"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Download generated template
        uses: actions/download-artifact@v4
        with:
          name: generated-template-${{ matrix.project_structure }}-${{ matrix.project_manager }}
          path: ${{ matrix.project_structure }}_${{ matrix.project_manager }}_repo

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: List all project commands
        run: |
          cd ${{ matrix.project_structure }}_repo
          uvx invoke --list


      # - name: Install uv
      #   if: ${{ matrix.project_manager == 'uv' }}
      #   uses: astral-sh/setup-uv@v5

      # - name: Install dependencies for uv
      #   if: ${{ matrix.project_manager == 'uv' }}
      #   run: |
      #     uv sync --all-extras --dev
      #     uv pip list



      # - name: Install conda
      #   uses: conda-incubator/setup-miniconda@v3
      #   with:
      #     auto-activate-base: true
      #     activate-environment: ""

      # - name: List all project commands
      #   run: |
      #     cd ${{ matrix.project_structure }}_repo
      #     invoke --list

      # - name: Run project commands
      #   run: |
      #     cd ${{ matrix.project_structure }}_repo
      #     invoke create-environment
      #     invoke requirements
      #     invoke dev-requirements
      #   env:
      #     TERM: xterm

      # - name: Run project commands
      #   run: |
      #     cd ${{ matrix.project_structure }}_repo
      #     invoke preprocess-data
      #     invoke train
      #     invoke test
      #   env:
      #     TERM: xterm

      # # remaining steps are only for the advance project structure

      # - name: Build documentation
      #   if: ${{ matrix.project_structure == 'advance' }}
      #   run: |
      #     cd ${{ matrix.project_structure }}_repo
      #     invoke build-docs
      #   env:
      #     TERM: xterm

      # - name: Build dockerfiles
      #   if: ${{ matrix.project_structure == 'advance' }}
      #   run: |
      #     cd ${{ matrix.project_structure }}_repo
      #     invoke docker-build
      #   env:
      #     TERM: xterm

      # - name: Check devcontainer
      #   if: ${{ matrix.project_structure == 'advance' }}
      #   run: |
      #     npm install -g @devcontainers/cli
      #     cd ${{ matrix.project_structure }}_repo
      #     devcontainer build --workspace-folder .
      #     devcontainer up --workspace-folder .
      #   env:
      #     TERM: xterm
